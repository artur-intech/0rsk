- # (The MIT License)
- # 
- # Copyright (c) 2019-2025 Yegor Bugayenko
- # 
- # Permission is hereby granted, free of charge, to any person obtaining a copy
- # of this software and associated documentation files (the 'Software'), to deal
- # in the Software without restriction, including without limitation the rights
- # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- # copies of the Software, and to permit persons to whom the Software is
- # furnished to do so, subject to the following conditions:
- # 
- # The above copyright notice and this permission notice shall be included in all
- # copies or substantial portions of the Software.
- # 
- # THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- # SOFTWARE.

%form{method: 'GET', action: ''}
  %input{type: 'text', name: 'q', size: 40, autocomplete: 'off', autofocus: 'true', tabindex: 1, value: query}
  %input{type: 'submit', value: 'Search', tabindex: 2}

- unless alone.empty?
  %p
    = succeed ':' do
      %strong.red ATTENTION
    There are
    %a{href: iri.cut('/ranked').add(q: '+alone')} a few risks
    without any plans!

- if triples.empty?
  %p
    %span.red Nothing
    found, sorry.
- else
  %p
    There are
    = total
    risks:
  - triples.each do |r|
    %p
      = thumb(r)
      = rank(r)
      %a{href: iri.over(q: r[:emoji])}<
        &= r[:emoji]
      = part('C', r[:cid])
      ➜
      = part('R', r[:rid])
      ➜
      = part('E', r[:eid])
      %br
      &= "#{r[:ctext]};"
      &= "#{r[:rtext]};"
      &= "#{r[:etext]}."
      %br
      %a.item.small{href: iri.cut('/triple').add(id: r[:id])} Edit
      %a.item.small{href: iri.cut('/responses').add(id: r[:id])}<
        - if r[:plans].empty?
          %span.red No plans
        - else
          = "#{r[:plans].count} plan#{r[:plans].count == 1 ? '' : 's'}"
          = '&darr;'
      %a.item.small{href: iri.cut('/ranked/delete').add(id: r[:id]), onclick: "return confirm('Are sure you want to delete tripple ##{r[:id]}');"} Delete
      - unless r[:plans].empty?
        - r[:plans].each do |p|
          %br
          %span.small{style: 'margin-left: 2em;'}
            %code.small= "P#{p[:id]}"
            &= p[:text]
  = Haml::Engine.new(File.read('views/_paging.haml')).render(self, locals.merge(count: triples.count))
